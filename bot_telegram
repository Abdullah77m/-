import telebot
from telebot import types
import random

import os

bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))

# قاموس الزخارف (حطيت القاموس الحقيقي هنا فقط بدون تغيير شيء في السكربت)
zakharef = {
    "1": lambda name: ''.join([f"{c}﹡" for c in name]),
    "2": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃")),
    "3": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝔄𝔅ℭ𝔇𝔈𝔉𝔊ℌℑ𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔ℜ𝔖𝔗𝔘𝔙𝔚𝔛𝔜ℨ𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷")),
    "4": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓")),
    "5": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛")),
    "6": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻")),
    "7": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳")),
    "8": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘵𝘶𝘷𝘸𝘹𝘺𝘻")),
    "9": lambda name: name.upper().translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉")),
    "10": lambda name: name.upper().translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉")),
    "11": lambda name: f"{name}̷",
    "12": lambda name: f"{name}̲",
    "13": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝒜ℬ𝒞𝒟ℰℱ𝒢ℋℐ𝒥𝒦ℒℳ𝒩𝒪𝒫𝒬ℛ𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵𝒶𝒷𝒸𝒹ℯ𝒻ℊ𝒽𝒾𝒿𝓀𝓁𝓂𝓃ℴ𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏")),
    "14": lambda name: name.upper().translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩")),
    "15": lambda name: f"{name}⃠",
    "16": lambda name: name.translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", "𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃")),
    "17": lambda name: ''.join([f"ⓇⓐⓃⓓⓞⓜ"[ord(c.upper()) % 7] if c.isalpha() else c for c in name]),
    "18": lambda name: '🧨' + '🧨'.join(name.upper()) + '🧨',
    "19": lambda name: name.upper().translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ")),
}

user_data = {}

@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id, "أهلاً بيك 🌟\nأرسل اسمك لتزخرفه بأي شكل يعجبك.")
    user_data[message.from_user.id] = {"step": "awaiting_name"}

@bot.message_handler(func=lambda m: True)
def name_handler(message):
    user_id = message.from_user.id
    if user_id not in user_data or user_data[user_id]["step"] != "awaiting_name":
        return

    if not message.text or message.text.strip() == "":
        bot.send_message(message.chat.id, "يرجى إدخال اسم صحيح وغير فارغ ✍️")
        return

    user_data[user_id]["name"] = message.text
    user_data[user_id]["step"] = "awaiting_category"

    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("🅰️ زخارف إنجليزية", callback_data="cat_english"),
        types.InlineKeyboardButton("🆎 زخارف عربية", callback_data="cat_arabic"),
        types.InlineKeyboardButton("🎲 زخرفة عشوائية", callback_data="random_zakhref")
    )
    markup.add(types.InlineKeyboardButton("🔙 رجوع", callback_data="back"))

    bot.send_message(message.chat.id, "اختار نوع الزخرفة ✨👇", reply_markup=markup)

@bot.callback_query_handler(func=lambda c: c.data.startswith("cat_"))
def category_handler(call):
    user_id = call.from_user.id
    name = user_data.get(user_id, {}).get("name", "")
    if not name:
        bot.answer_callback_query(call.id, "أرسل اسمك أولاً!", show_alert=True)
        return

    if call.data == "cat_english":
        start = 1
        end = 10
    elif call.data == "cat_arabic":
        start = 11
        end = 15
    else:
        return

    markup = types.InlineKeyboardMarkup()
    for i in range(start, end + 1):
        try:
            preview = zakharef[str(i)](name)
        except:
            preview = name
        markup.add(types.InlineKeyboardButton(preview, callback_data=f"zakhref_{i}"))

    markup.add(types.InlineKeyboardButton("🔙 رجوع", callback_data="category_back"))
    bot.edit_message_text("اختار الزخرفة الي تعجبك ✨", chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=markup)

@bot.callback_query_handler(func=lambda c: c.data == "random_zakhref")
def random_zakhref_handler(call):
    user_id = call.from_user.id
    name = user_data.get(user_id, {}).get("name", "")
    if not name:
        bot.answer_callback_query(call.id, "أرسل اسمك أولاً!", show_alert=True)
        return

    z_id = random.choice(list(zakharef.keys()))
    try:
        result = zakharef[z_id](name)
    except:
        result = name

    bot.send_message(call.message.chat.id, f"زخرفتك العشوائية 🎲:\n{result}\n\n📋 اضغط مطولًا لنسخها")

@bot.callback_query_handler(func=lambda c: c.data.startswith("zakhref_"))
def process_zakhref(call):
    user_id = call.from_user.id
    z_id = call.data.split("_")[1]
    name = user_data.get(user_id, {}).get("name", "")
    if not name:
        bot.answer_callback_query(call.id, "أرسل اسمك أولاً!", show_alert=True)
        return

    if z_id in zakharef:
        try:
            result = zakharef[z_id](name)
        except:
            result = name
        bot.send_message(user_id, f"زخرفتك:\n{result}\n\n📋 اضغط مطولًا لنسخها")

@bot.callback_query_handler(func=lambda c: c.data == "category_back")
def back_to_categories(call):
    user_id = call.from_user.id
    user_data[user_id]["step"] = "awaiting_category"

    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("🅰️ زخارف إنجليزية", callback_data="cat_english"),
        types.InlineKeyboardButton("🆎 زخارف عربية", callback_data="cat_arabic"),
        types.InlineKeyboardButton("🎲 زخرفة عشوائية", callback_data="random_zakhref")
    )
    markup.add(types.InlineKeyboardButton("🔙 رجوع", callback_data="back"))
    bot.edit_message_text("اختار نوع الزخرفة ✨👇", chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=markup)

@bot.callback_query_handler(func=lambda c: c.data == "back")
def go_back(call):
    user_id = call.from_user.id
    user_data[user_id]["step"] = "awaiting_name"
    bot.send_message(call.message.chat.id, "رجعنا ✅\nأرسل اسمك من جديد ✍️")

bot.polling( 